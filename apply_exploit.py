import requests
import json
import subprocess

def scan_with_nmap(target):
    print("Running Nmap scan...")
    nmap_command = ["nmap", "-O", target]
    result = subprocess.run(nmap_command, capture_output=True, text=True)
    print(result.stdout)
    return result.stdout

def extract_os_info(nmap_output):
    os_info = "Unknown"
    for line in nmap_output.split("\n"):
        if "OS details:" in line:
            os_info = line.split(":", 1)[1].strip()
            break
    return os_info

def search_exploitdb(keyword):
    url = f"https://www.exploit-db.com/search?cve={keyword}"
    headers = {"User-Agent": "Mozilla/5.0"}
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        return f"ExploitDB results: {url}"
    return "ExploitDB search failed."

def search_mitre(keyword):
    url = f"https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword={keyword}"
    headers = {"User-Agent": "Mozilla/5.0"}
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        return f"MITRE CVE results: {url}"
    return "MITRE search failed."

def search_nvd(keyword):
    url = f"https://nvd.nist.gov/vuln/search/results?query={keyword}&search_type=all"
    headers = {"User-Agent": "Mozilla/5.0"}
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        return f"NVD results: {url}"
    return "NVD search failed."

def search_github(keyword):
    url = f"https://github.com/search?q={keyword}+exploit"
    return f"GitHub results: {url}"

def search_packetstorm(keyword):
    url = f"https://packetstormsecurity.com/search/?q={keyword}"
    headers = {"User-Agent": "Mozilla/5.0"}
    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        return f"Packet Storm results: {url}"
    return "Packet Storm search failed."

def search_exploits(keyword):
    results = {
        "ExploitDB": search_exploitdb(keyword),
        "MITRE": search_mitre(keyword),
        "NVD": search_nvd(keyword),
        "GitHub": search_github(keyword),
        "Packet Storm": search_packetstorm(keyword),
    }
    return results
